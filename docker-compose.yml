version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=postgres_pinger
    ports:
      - "${REST_SERVER_PORT}:${REST_SERVER_PORT}"
    depends_on:
      postgres_pinger:
        condition: service_healthy

  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    container_name: pinger
    env_file:
      - .env
    environment:
      - HOST=backend
    depends_on:
      backend:
        condition: service_healthy

  postgres_pinger:
    image: postgres:15-alpine
    container_name: postgres_container_pinger
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres_pinger
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
